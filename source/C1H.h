/* C1H.h
   Generated by gSOAP 2.7.15 from ContestQsos.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef C1H_H
#define C1H_H
#include "C1Stub.h"

namespace C1 {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_byte
#define SOAP_TYPE_C1_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_byte(soap, data), 0) || C1::soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_C1_int
#define SOAP_TYPE_C1_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_int(soap, data), 0) || C1::soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_C1_double
#define SOAP_TYPE_C1_double (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#define soap_write_double(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_double(soap, data), 0) || C1::soap_put_double(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_C1_std__string
#define SOAP_TYPE_C1_std__string (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) C1::soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__ArrayOfRigFrequency
#define SOAP_TYPE_C1_contest2__ArrayOfRigFrequency (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__ArrayOfRigFrequency(struct soap*, const char*, int, const contest2__ArrayOfRigFrequency *, const char*);
SOAP_FMAC3 contest2__ArrayOfRigFrequency * SOAP_FMAC4 soap_in_contest2__ArrayOfRigFrequency(struct soap*, const char*, contest2__ArrayOfRigFrequency *, const char*);

#define soap_write_contest2__ArrayOfRigFrequency(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__ArrayOfRigFrequency(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__ArrayOfRigFrequency(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfRigFrequency * SOAP_FMAC4 soap_get_contest2__ArrayOfRigFrequency(struct soap*, contest2__ArrayOfRigFrequency *, const char*, const char*);

#define soap_new_contest2__ArrayOfRigFrequency(soap, n) C1::soap_instantiate_contest2__ArrayOfRigFrequency(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__ArrayOfRigFrequency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__ArrayOfRigFrequency * SOAP_FMAC2 soap_instantiate_contest2__ArrayOfRigFrequency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__ArrayOfRigFrequency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__RigFrequency
#define SOAP_TYPE_C1_contest2__RigFrequency (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__RigFrequency(struct soap*, const char*, int, const contest2__RigFrequency *, const char*);
SOAP_FMAC3 contest2__RigFrequency * SOAP_FMAC4 soap_in_contest2__RigFrequency(struct soap*, const char*, contest2__RigFrequency *, const char*);

#define soap_write_contest2__RigFrequency(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__RigFrequency(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__RigFrequency(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__RigFrequency * SOAP_FMAC4 soap_get_contest2__RigFrequency(struct soap*, contest2__RigFrequency *, const char*, const char*);

#define soap_new_contest2__RigFrequency(soap, n) C1::soap_instantiate_contest2__RigFrequency(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__RigFrequency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__RigFrequency * SOAP_FMAC2 soap_instantiate_contest2__RigFrequency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__RigFrequency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__LogSummary
#define SOAP_TYPE_C1_contest2__LogSummary (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__LogSummary(struct soap*, const char*, int, const contest2__LogSummary *, const char*);
SOAP_FMAC3 contest2__LogSummary * SOAP_FMAC4 soap_in_contest2__LogSummary(struct soap*, const char*, contest2__LogSummary *, const char*);

#define soap_write_contest2__LogSummary(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__LogSummary(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__LogSummary(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__LogSummary * SOAP_FMAC4 soap_get_contest2__LogSummary(struct soap*, contest2__LogSummary *, const char*, const char*);

#define soap_new_contest2__LogSummary(soap, n) C1::soap_instantiate_contest2__LogSummary(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__LogSummary(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__LogSummary * SOAP_FMAC2 soap_instantiate_contest2__LogSummary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__LogSummary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__ArrayOfQsoIdVersion
#define SOAP_TYPE_C1_contest2__ArrayOfQsoIdVersion (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__ArrayOfQsoIdVersion(struct soap*, const char*, int, const contest2__ArrayOfQsoIdVersion *, const char*);
SOAP_FMAC3 contest2__ArrayOfQsoIdVersion * SOAP_FMAC4 soap_in_contest2__ArrayOfQsoIdVersion(struct soap*, const char*, contest2__ArrayOfQsoIdVersion *, const char*);

#define soap_write_contest2__ArrayOfQsoIdVersion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__ArrayOfQsoIdVersion(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__ArrayOfQsoIdVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfQsoIdVersion * SOAP_FMAC4 soap_get_contest2__ArrayOfQsoIdVersion(struct soap*, contest2__ArrayOfQsoIdVersion *, const char*, const char*);

#define soap_new_contest2__ArrayOfQsoIdVersion(soap, n) C1::soap_instantiate_contest2__ArrayOfQsoIdVersion(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__ArrayOfQsoIdVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__ArrayOfQsoIdVersion * SOAP_FMAC2 soap_instantiate_contest2__ArrayOfQsoIdVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__ArrayOfQsoIdVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__QsoIdVersion
#define SOAP_TYPE_C1_contest2__QsoIdVersion (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__QsoIdVersion(struct soap*, const char*, int, const contest2__QsoIdVersion *, const char*);
SOAP_FMAC3 contest2__QsoIdVersion * SOAP_FMAC4 soap_in_contest2__QsoIdVersion(struct soap*, const char*, contest2__QsoIdVersion *, const char*);

#define soap_write_contest2__QsoIdVersion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__QsoIdVersion(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__QsoIdVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__QsoIdVersion * SOAP_FMAC4 soap_get_contest2__QsoIdVersion(struct soap*, contest2__QsoIdVersion *, const char*, const char*);

#define soap_new_contest2__QsoIdVersion(soap, n) C1::soap_instantiate_contest2__QsoIdVersion(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__QsoIdVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__QsoIdVersion * SOAP_FMAC2 soap_instantiate_contest2__QsoIdVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__QsoIdVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__QsoUpdate
#define SOAP_TYPE_C1_contest2__QsoUpdate (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__QsoUpdate(struct soap*, const char*, int, const contest2__QsoUpdate *, const char*);
SOAP_FMAC3 contest2__QsoUpdate * SOAP_FMAC4 soap_in_contest2__QsoUpdate(struct soap*, const char*, contest2__QsoUpdate *, const char*);

#define soap_write_contest2__QsoUpdate(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__QsoUpdate(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__QsoUpdate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__QsoUpdate * SOAP_FMAC4 soap_get_contest2__QsoUpdate(struct soap*, contest2__QsoUpdate *, const char*, const char*);

#define soap_new_contest2__QsoUpdate(soap, n) C1::soap_instantiate_contest2__QsoUpdate(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__QsoUpdate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__QsoUpdate * SOAP_FMAC2 soap_instantiate_contest2__QsoUpdate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__QsoUpdate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__ArrayOfQso
#define SOAP_TYPE_C1_contest2__ArrayOfQso (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__ArrayOfQso(struct soap*, const char*, int, const contest2__ArrayOfQso *, const char*);
SOAP_FMAC3 contest2__ArrayOfQso * SOAP_FMAC4 soap_in_contest2__ArrayOfQso(struct soap*, const char*, contest2__ArrayOfQso *, const char*);

#define soap_write_contest2__ArrayOfQso(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__ArrayOfQso(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__ArrayOfQso(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfQso * SOAP_FMAC4 soap_get_contest2__ArrayOfQso(struct soap*, contest2__ArrayOfQso *, const char*, const char*);

#define soap_new_contest2__ArrayOfQso(soap, n) C1::soap_instantiate_contest2__ArrayOfQso(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__ArrayOfQso(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__ArrayOfQso * SOAP_FMAC2 soap_instantiate_contest2__ArrayOfQso(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__ArrayOfQso(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__Qso
#define SOAP_TYPE_C1_contest2__Qso (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__Qso(struct soap*, const char*, int, const contest2__Qso *, const char*);
SOAP_FMAC3 contest2__Qso * SOAP_FMAC4 soap_in_contest2__Qso(struct soap*, const char*, contest2__Qso *, const char*);

#define soap_write_contest2__Qso(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__Qso(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__Qso(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__Qso * SOAP_FMAC4 soap_get_contest2__Qso(struct soap*, contest2__Qso *, const char*, const char*);

#define soap_new_contest2__Qso(soap, n) C1::soap_instantiate_contest2__Qso(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__Qso(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__Qso * SOAP_FMAC2 soap_instantiate_contest2__Qso(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__Qso(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__ArrayOfint
#define SOAP_TYPE_C1_contest2__ArrayOfint (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__ArrayOfint(struct soap*, const char*, int, const contest2__ArrayOfint *, const char*);
SOAP_FMAC3 contest2__ArrayOfint * SOAP_FMAC4 soap_in_contest2__ArrayOfint(struct soap*, const char*, contest2__ArrayOfint *, const char*);

#define soap_write_contest2__ArrayOfint(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__ArrayOfint(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__ArrayOfint(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfint * SOAP_FMAC4 soap_get_contest2__ArrayOfint(struct soap*, contest2__ArrayOfint *, const char*, const char*);

#define soap_new_contest2__ArrayOfint(soap, n) C1::soap_instantiate_contest2__ArrayOfint(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__ArrayOfint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__ArrayOfint * SOAP_FMAC2 soap_instantiate_contest2__ArrayOfint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__ArrayOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest2__ArrayOfstring
#define SOAP_TYPE_C1_contest2__ArrayOfstring (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest2__ArrayOfstring(struct soap*, const char*, int, const contest2__ArrayOfstring *, const char*);
SOAP_FMAC3 contest2__ArrayOfstring * SOAP_FMAC4 soap_in_contest2__ArrayOfstring(struct soap*, const char*, contest2__ArrayOfstring *, const char*);

#define soap_write_contest2__ArrayOfstring(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_contest2__ArrayOfstring(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest2__ArrayOfstring(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfstring * SOAP_FMAC4 soap_get_contest2__ArrayOfstring(struct soap*, contest2__ArrayOfstring *, const char*, const char*);

#define soap_new_contest2__ArrayOfstring(soap, n) C1::soap_instantiate_contest2__ArrayOfstring(soap, n, NULL, NULL, NULL)


#define soap_delete_contest2__ArrayOfstring(soap, p) soap_delete(soap, p)

SOAP_FMAC1 contest2__ArrayOfstring * SOAP_FMAC2 soap_instantiate_contest2__ArrayOfstring(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest2__ArrayOfstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_SOAP_ENV__Fault
#define SOAP_TYPE_C1_SOAP_ENV__Fault (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_SOAP_ENV__Fault(soap, data), 0) || C1::soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) C1::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_SOAP_ENV__Reason
#define SOAP_TYPE_C1_SOAP_ENV__Reason (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_SOAP_ENV__Reason(soap, data), 0) || C1::soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) C1::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_SOAP_ENV__Detail
#define SOAP_TYPE_C1_SOAP_ENV__Detail (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_SOAP_ENV__Detail(soap, data), 0) || C1::soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) C1::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_SOAP_ENV__Code
#define SOAP_TYPE_C1_SOAP_ENV__Code (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_SOAP_ENV__Code(soap, data), 0) || C1::soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) C1::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_SOAP_ENV__Header
#define SOAP_TYPE_C1_SOAP_ENV__Header (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_SOAP_ENV__Header(soap, data), 0) || C1::soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) C1::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_C1_contest3__ExchangeFrequencies
#define SOAP_TYPE_C1_contest3__ExchangeFrequencies (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__ExchangeFrequencies(struct soap*, struct contest3__ExchangeFrequencies *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__ExchangeFrequencies(struct soap*, const struct contest3__ExchangeFrequencies *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__ExchangeFrequencies(struct soap*, const char*, int, const struct contest3__ExchangeFrequencies *, const char*);
SOAP_FMAC3 struct contest3__ExchangeFrequencies * SOAP_FMAC4 soap_in_contest3__ExchangeFrequencies(struct soap*, const char*, struct contest3__ExchangeFrequencies *, const char*);

#define soap_write_contest3__ExchangeFrequencies(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__ExchangeFrequencies(soap, data), 0) || C1::soap_put_contest3__ExchangeFrequencies(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__ExchangeFrequencies(struct soap*, const struct contest3__ExchangeFrequencies *, const char*, const char*);

#define soap_read_contest3__ExchangeFrequencies(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__ExchangeFrequencies(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__ExchangeFrequencies * SOAP_FMAC4 soap_get_contest3__ExchangeFrequencies(struct soap*, struct contest3__ExchangeFrequencies *, const char*, const char*);

#define soap_new_contest3__ExchangeFrequencies(soap, n) C1::soap_instantiate_contest3__ExchangeFrequencies(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__ExchangeFrequencies(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__ExchangeFrequencies * SOAP_FMAC2 soap_instantiate_contest3__ExchangeFrequencies(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__ExchangeFrequencies(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__ExchangeFrequenciesResponse
#define SOAP_TYPE_C1_contest3__ExchangeFrequenciesResponse (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__ExchangeFrequenciesResponse(struct soap*, struct contest3__ExchangeFrequenciesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__ExchangeFrequenciesResponse(struct soap*, const struct contest3__ExchangeFrequenciesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__ExchangeFrequenciesResponse(struct soap*, const char*, int, const struct contest3__ExchangeFrequenciesResponse *, const char*);
SOAP_FMAC3 struct contest3__ExchangeFrequenciesResponse * SOAP_FMAC4 soap_in_contest3__ExchangeFrequenciesResponse(struct soap*, const char*, struct contest3__ExchangeFrequenciesResponse *, const char*);

#define soap_write_contest3__ExchangeFrequenciesResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__ExchangeFrequenciesResponse(soap, data), 0) || C1::soap_put_contest3__ExchangeFrequenciesResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__ExchangeFrequenciesResponse(struct soap*, const struct contest3__ExchangeFrequenciesResponse *, const char*, const char*);

#define soap_read_contest3__ExchangeFrequenciesResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__ExchangeFrequenciesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__ExchangeFrequenciesResponse * SOAP_FMAC4 soap_get_contest3__ExchangeFrequenciesResponse(struct soap*, struct contest3__ExchangeFrequenciesResponse *, const char*, const char*);

#define soap_new_contest3__ExchangeFrequenciesResponse(soap, n) C1::soap_instantiate_contest3__ExchangeFrequenciesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__ExchangeFrequenciesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__ExchangeFrequenciesResponse * SOAP_FMAC2 soap_instantiate_contest3__ExchangeFrequenciesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__ExchangeFrequenciesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__ColumnNamesToIndices
#define SOAP_TYPE_C1_contest3__ColumnNamesToIndices (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__ColumnNamesToIndices(struct soap*, struct contest3__ColumnNamesToIndices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__ColumnNamesToIndices(struct soap*, const struct contest3__ColumnNamesToIndices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__ColumnNamesToIndices(struct soap*, const char*, int, const struct contest3__ColumnNamesToIndices *, const char*);
SOAP_FMAC3 struct contest3__ColumnNamesToIndices * SOAP_FMAC4 soap_in_contest3__ColumnNamesToIndices(struct soap*, const char*, struct contest3__ColumnNamesToIndices *, const char*);

#define soap_write_contest3__ColumnNamesToIndices(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__ColumnNamesToIndices(soap, data), 0) || C1::soap_put_contest3__ColumnNamesToIndices(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__ColumnNamesToIndices(struct soap*, const struct contest3__ColumnNamesToIndices *, const char*, const char*);

#define soap_read_contest3__ColumnNamesToIndices(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__ColumnNamesToIndices(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__ColumnNamesToIndices * SOAP_FMAC4 soap_get_contest3__ColumnNamesToIndices(struct soap*, struct contest3__ColumnNamesToIndices *, const char*, const char*);

#define soap_new_contest3__ColumnNamesToIndices(soap, n) C1::soap_instantiate_contest3__ColumnNamesToIndices(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__ColumnNamesToIndices(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__ColumnNamesToIndices * SOAP_FMAC2 soap_instantiate_contest3__ColumnNamesToIndices(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__ColumnNamesToIndices(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__ColumnNamesToIndicesResponse
#define SOAP_TYPE_C1_contest3__ColumnNamesToIndicesResponse (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__ColumnNamesToIndicesResponse(struct soap*, struct contest3__ColumnNamesToIndicesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__ColumnNamesToIndicesResponse(struct soap*, const struct contest3__ColumnNamesToIndicesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__ColumnNamesToIndicesResponse(struct soap*, const char*, int, const struct contest3__ColumnNamesToIndicesResponse *, const char*);
SOAP_FMAC3 struct contest3__ColumnNamesToIndicesResponse * SOAP_FMAC4 soap_in_contest3__ColumnNamesToIndicesResponse(struct soap*, const char*, struct contest3__ColumnNamesToIndicesResponse *, const char*);

#define soap_write_contest3__ColumnNamesToIndicesResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__ColumnNamesToIndicesResponse(soap, data), 0) || C1::soap_put_contest3__ColumnNamesToIndicesResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__ColumnNamesToIndicesResponse(struct soap*, const struct contest3__ColumnNamesToIndicesResponse *, const char*, const char*);

#define soap_read_contest3__ColumnNamesToIndicesResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__ColumnNamesToIndicesResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__ColumnNamesToIndicesResponse * SOAP_FMAC4 soap_get_contest3__ColumnNamesToIndicesResponse(struct soap*, struct contest3__ColumnNamesToIndicesResponse *, const char*, const char*);

#define soap_new_contest3__ColumnNamesToIndicesResponse(soap, n) C1::soap_instantiate_contest3__ColumnNamesToIndicesResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__ColumnNamesToIndicesResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__ColumnNamesToIndicesResponse * SOAP_FMAC2 soap_instantiate_contest3__ColumnNamesToIndicesResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__ColumnNamesToIndicesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__getQsosByKeyArray
#define SOAP_TYPE_C1_contest3__getQsosByKeyArray (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__getQsosByKeyArray(struct soap*, struct contest3__getQsosByKeyArray *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__getQsosByKeyArray(struct soap*, const struct contest3__getQsosByKeyArray *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__getQsosByKeyArray(struct soap*, const char*, int, const struct contest3__getQsosByKeyArray *, const char*);
SOAP_FMAC3 struct contest3__getQsosByKeyArray * SOAP_FMAC4 soap_in_contest3__getQsosByKeyArray(struct soap*, const char*, struct contest3__getQsosByKeyArray *, const char*);

#define soap_write_contest3__getQsosByKeyArray(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__getQsosByKeyArray(soap, data), 0) || C1::soap_put_contest3__getQsosByKeyArray(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__getQsosByKeyArray(struct soap*, const struct contest3__getQsosByKeyArray *, const char*, const char*);

#define soap_read_contest3__getQsosByKeyArray(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__getQsosByKeyArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__getQsosByKeyArray * SOAP_FMAC4 soap_get_contest3__getQsosByKeyArray(struct soap*, struct contest3__getQsosByKeyArray *, const char*, const char*);

#define soap_new_contest3__getQsosByKeyArray(soap, n) C1::soap_instantiate_contest3__getQsosByKeyArray(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__getQsosByKeyArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__getQsosByKeyArray * SOAP_FMAC2 soap_instantiate_contest3__getQsosByKeyArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__getQsosByKeyArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__getQsosByKeyArrayResponse
#define SOAP_TYPE_C1_contest3__getQsosByKeyArrayResponse (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__getQsosByKeyArrayResponse(struct soap*, struct contest3__getQsosByKeyArrayResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__getQsosByKeyArrayResponse(struct soap*, const struct contest3__getQsosByKeyArrayResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__getQsosByKeyArrayResponse(struct soap*, const char*, int, const struct contest3__getQsosByKeyArrayResponse *, const char*);
SOAP_FMAC3 struct contest3__getQsosByKeyArrayResponse * SOAP_FMAC4 soap_in_contest3__getQsosByKeyArrayResponse(struct soap*, const char*, struct contest3__getQsosByKeyArrayResponse *, const char*);

#define soap_write_contest3__getQsosByKeyArrayResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__getQsosByKeyArrayResponse(soap, data), 0) || C1::soap_put_contest3__getQsosByKeyArrayResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__getQsosByKeyArrayResponse(struct soap*, const struct contest3__getQsosByKeyArrayResponse *, const char*, const char*);

#define soap_read_contest3__getQsosByKeyArrayResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__getQsosByKeyArrayResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__getQsosByKeyArrayResponse * SOAP_FMAC4 soap_get_contest3__getQsosByKeyArrayResponse(struct soap*, struct contest3__getQsosByKeyArrayResponse *, const char*, const char*);

#define soap_new_contest3__getQsosByKeyArrayResponse(soap, n) C1::soap_instantiate_contest3__getQsosByKeyArrayResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__getQsosByKeyArrayResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__getQsosByKeyArrayResponse * SOAP_FMAC2 soap_instantiate_contest3__getQsosByKeyArrayResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__getQsosByKeyArrayResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__addAndGetQsos
#define SOAP_TYPE_C1_contest3__addAndGetQsos (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__addAndGetQsos(struct soap*, struct contest3__addAndGetQsos *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__addAndGetQsos(struct soap*, const struct contest3__addAndGetQsos *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__addAndGetQsos(struct soap*, const char*, int, const struct contest3__addAndGetQsos *, const char*);
SOAP_FMAC3 struct contest3__addAndGetQsos * SOAP_FMAC4 soap_in_contest3__addAndGetQsos(struct soap*, const char*, struct contest3__addAndGetQsos *, const char*);

#define soap_write_contest3__addAndGetQsos(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__addAndGetQsos(soap, data), 0) || C1::soap_put_contest3__addAndGetQsos(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__addAndGetQsos(struct soap*, const struct contest3__addAndGetQsos *, const char*, const char*);

#define soap_read_contest3__addAndGetQsos(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__addAndGetQsos(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__addAndGetQsos * SOAP_FMAC4 soap_get_contest3__addAndGetQsos(struct soap*, struct contest3__addAndGetQsos *, const char*, const char*);

#define soap_new_contest3__addAndGetQsos(soap, n) C1::soap_instantiate_contest3__addAndGetQsos(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__addAndGetQsos(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__addAndGetQsos * SOAP_FMAC2 soap_instantiate_contest3__addAndGetQsos(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__addAndGetQsos(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__addAndGetQsosResponse
#define SOAP_TYPE_C1_contest3__addAndGetQsosResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__addAndGetQsosResponse(struct soap*, struct contest3__addAndGetQsosResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__addAndGetQsosResponse(struct soap*, const struct contest3__addAndGetQsosResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__addAndGetQsosResponse(struct soap*, const char*, int, const struct contest3__addAndGetQsosResponse *, const char*);
SOAP_FMAC3 struct contest3__addAndGetQsosResponse * SOAP_FMAC4 soap_in_contest3__addAndGetQsosResponse(struct soap*, const char*, struct contest3__addAndGetQsosResponse *, const char*);

#define soap_write_contest3__addAndGetQsosResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__addAndGetQsosResponse(soap, data), 0) || C1::soap_put_contest3__addAndGetQsosResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__addAndGetQsosResponse(struct soap*, const struct contest3__addAndGetQsosResponse *, const char*, const char*);

#define soap_read_contest3__addAndGetQsosResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__addAndGetQsosResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__addAndGetQsosResponse * SOAP_FMAC4 soap_get_contest3__addAndGetQsosResponse(struct soap*, struct contest3__addAndGetQsosResponse *, const char*, const char*);

#define soap_new_contest3__addAndGetQsosResponse(soap, n) C1::soap_instantiate_contest3__addAndGetQsosResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__addAndGetQsosResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__addAndGetQsosResponse * SOAP_FMAC2 soap_instantiate_contest3__addAndGetQsosResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__addAndGetQsosResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__AddAndGetLogSummary
#define SOAP_TYPE_C1_contest3__AddAndGetLogSummary (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__AddAndGetLogSummary(struct soap*, struct contest3__AddAndGetLogSummary *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__AddAndGetLogSummary(struct soap*, const struct contest3__AddAndGetLogSummary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__AddAndGetLogSummary(struct soap*, const char*, int, const struct contest3__AddAndGetLogSummary *, const char*);
SOAP_FMAC3 struct contest3__AddAndGetLogSummary * SOAP_FMAC4 soap_in_contest3__AddAndGetLogSummary(struct soap*, const char*, struct contest3__AddAndGetLogSummary *, const char*);

#define soap_write_contest3__AddAndGetLogSummary(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__AddAndGetLogSummary(soap, data), 0) || C1::soap_put_contest3__AddAndGetLogSummary(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__AddAndGetLogSummary(struct soap*, const struct contest3__AddAndGetLogSummary *, const char*, const char*);

#define soap_read_contest3__AddAndGetLogSummary(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__AddAndGetLogSummary(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__AddAndGetLogSummary * SOAP_FMAC4 soap_get_contest3__AddAndGetLogSummary(struct soap*, struct contest3__AddAndGetLogSummary *, const char*, const char*);

#define soap_new_contest3__AddAndGetLogSummary(soap, n) C1::soap_instantiate_contest3__AddAndGetLogSummary(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__AddAndGetLogSummary(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__AddAndGetLogSummary * SOAP_FMAC2 soap_instantiate_contest3__AddAndGetLogSummary(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__AddAndGetLogSummary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__AddAndGetLogSummaryResponse
#define SOAP_TYPE_C1_contest3__AddAndGetLogSummaryResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__AddAndGetLogSummaryResponse(struct soap*, struct contest3__AddAndGetLogSummaryResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__AddAndGetLogSummaryResponse(struct soap*, const struct contest3__AddAndGetLogSummaryResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__AddAndGetLogSummaryResponse(struct soap*, const char*, int, const struct contest3__AddAndGetLogSummaryResponse *, const char*);
SOAP_FMAC3 struct contest3__AddAndGetLogSummaryResponse * SOAP_FMAC4 soap_in_contest3__AddAndGetLogSummaryResponse(struct soap*, const char*, struct contest3__AddAndGetLogSummaryResponse *, const char*);

#define soap_write_contest3__AddAndGetLogSummaryResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__AddAndGetLogSummaryResponse(soap, data), 0) || C1::soap_put_contest3__AddAndGetLogSummaryResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__AddAndGetLogSummaryResponse(struct soap*, const struct contest3__AddAndGetLogSummaryResponse *, const char*, const char*);

#define soap_read_contest3__AddAndGetLogSummaryResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__AddAndGetLogSummaryResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__AddAndGetLogSummaryResponse * SOAP_FMAC4 soap_get_contest3__AddAndGetLogSummaryResponse(struct soap*, struct contest3__AddAndGetLogSummaryResponse *, const char*, const char*);

#define soap_new_contest3__AddAndGetLogSummaryResponse(soap, n) C1::soap_instantiate_contest3__AddAndGetLogSummaryResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__AddAndGetLogSummaryResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__AddAndGetLogSummaryResponse * SOAP_FMAC2 soap_instantiate_contest3__AddAndGetLogSummaryResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__AddAndGetLogSummaryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__GetSessionId
#define SOAP_TYPE_C1_contest3__GetSessionId (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__GetSessionId(struct soap*, struct contest3__GetSessionId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__GetSessionId(struct soap*, const struct contest3__GetSessionId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__GetSessionId(struct soap*, const char*, int, const struct contest3__GetSessionId *, const char*);
SOAP_FMAC3 struct contest3__GetSessionId * SOAP_FMAC4 soap_in_contest3__GetSessionId(struct soap*, const char*, struct contest3__GetSessionId *, const char*);

#define soap_write_contest3__GetSessionId(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__GetSessionId(soap, data), 0) || C1::soap_put_contest3__GetSessionId(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__GetSessionId(struct soap*, const struct contest3__GetSessionId *, const char*, const char*);

#define soap_read_contest3__GetSessionId(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__GetSessionId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__GetSessionId * SOAP_FMAC4 soap_get_contest3__GetSessionId(struct soap*, struct contest3__GetSessionId *, const char*, const char*);

#define soap_new_contest3__GetSessionId(soap, n) C1::soap_instantiate_contest3__GetSessionId(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__GetSessionId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__GetSessionId * SOAP_FMAC2 soap_instantiate_contest3__GetSessionId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__GetSessionId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_contest3__GetSessionIdResponse
#define SOAP_TYPE_C1_contest3__GetSessionIdResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_contest3__GetSessionIdResponse(struct soap*, struct contest3__GetSessionIdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_contest3__GetSessionIdResponse(struct soap*, const struct contest3__GetSessionIdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_contest3__GetSessionIdResponse(struct soap*, const char*, int, const struct contest3__GetSessionIdResponse *, const char*);
SOAP_FMAC3 struct contest3__GetSessionIdResponse * SOAP_FMAC4 soap_in_contest3__GetSessionIdResponse(struct soap*, const char*, struct contest3__GetSessionIdResponse *, const char*);

#define soap_write_contest3__GetSessionIdResponse(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_contest3__GetSessionIdResponse(soap, data), 0) || C1::soap_put_contest3__GetSessionIdResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_contest3__GetSessionIdResponse(struct soap*, const struct contest3__GetSessionIdResponse *, const char*, const char*);

#define soap_read_contest3__GetSessionIdResponse(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_contest3__GetSessionIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct contest3__GetSessionIdResponse * SOAP_FMAC4 soap_get_contest3__GetSessionIdResponse(struct soap*, struct contest3__GetSessionIdResponse *, const char*, const char*);

#define soap_new_contest3__GetSessionIdResponse(soap, n) C1::soap_instantiate_contest3__GetSessionIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_contest3__GetSessionIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct contest3__GetSessionIdResponse * SOAP_FMAC2 soap_instantiate_contest3__GetSessionIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_contest3__GetSessionIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_C1_PointerToSOAP_ENV__Reason (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || C1::soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_C1_PointerToSOAP_ENV__Detail (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || C1::soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_C1_PointerToSOAP_ENV__Code
#define SOAP_TYPE_C1_PointerToSOAP_ENV__Code (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || C1::soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_C1_PointerTocontest2__ArrayOfRigFrequency
#define SOAP_TYPE_C1_PointerTocontest2__ArrayOfRigFrequency (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__ArrayOfRigFrequency(struct soap*, contest2__ArrayOfRigFrequency *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__ArrayOfRigFrequency(struct soap*, const char *, int, contest2__ArrayOfRigFrequency *const*, const char *);
SOAP_FMAC3 contest2__ArrayOfRigFrequency ** SOAP_FMAC4 soap_in_PointerTocontest2__ArrayOfRigFrequency(struct soap*, const char*, contest2__ArrayOfRigFrequency **, const char*);

#define soap_write_PointerTocontest2__ArrayOfRigFrequency(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__ArrayOfRigFrequency(soap, data), 0) || C1::soap_put_PointerTocontest2__ArrayOfRigFrequency(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__ArrayOfRigFrequency(struct soap*, contest2__ArrayOfRigFrequency *const*, const char*, const char*);

#define soap_read_PointerTocontest2__ArrayOfRigFrequency(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__ArrayOfRigFrequency(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfRigFrequency ** SOAP_FMAC4 soap_get_PointerTocontest2__ArrayOfRigFrequency(struct soap*, contest2__ArrayOfRigFrequency **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__ArrayOfint
#define SOAP_TYPE_C1_PointerTocontest2__ArrayOfint (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__ArrayOfint(struct soap*, contest2__ArrayOfint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__ArrayOfint(struct soap*, const char *, int, contest2__ArrayOfint *const*, const char *);
SOAP_FMAC3 contest2__ArrayOfint ** SOAP_FMAC4 soap_in_PointerTocontest2__ArrayOfint(struct soap*, const char*, contest2__ArrayOfint **, const char*);

#define soap_write_PointerTocontest2__ArrayOfint(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__ArrayOfint(soap, data), 0) || C1::soap_put_PointerTocontest2__ArrayOfint(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__ArrayOfint(struct soap*, contest2__ArrayOfint *const*, const char*, const char*);

#define soap_read_PointerTocontest2__ArrayOfint(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__ArrayOfint(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfint ** SOAP_FMAC4 soap_get_PointerTocontest2__ArrayOfint(struct soap*, contest2__ArrayOfint **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__QsoUpdate
#define SOAP_TYPE_C1_PointerTocontest2__QsoUpdate (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__QsoUpdate(struct soap*, contest2__QsoUpdate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__QsoUpdate(struct soap*, const char *, int, contest2__QsoUpdate *const*, const char *);
SOAP_FMAC3 contest2__QsoUpdate ** SOAP_FMAC4 soap_in_PointerTocontest2__QsoUpdate(struct soap*, const char*, contest2__QsoUpdate **, const char*);

#define soap_write_PointerTocontest2__QsoUpdate(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__QsoUpdate(soap, data), 0) || C1::soap_put_PointerTocontest2__QsoUpdate(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__QsoUpdate(struct soap*, contest2__QsoUpdate *const*, const char*, const char*);

#define soap_read_PointerTocontest2__QsoUpdate(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__QsoUpdate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__QsoUpdate ** SOAP_FMAC4 soap_get_PointerTocontest2__QsoUpdate(struct soap*, contest2__QsoUpdate **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__LogSummary
#define SOAP_TYPE_C1_PointerTocontest2__LogSummary (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__LogSummary(struct soap*, contest2__LogSummary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__LogSummary(struct soap*, const char *, int, contest2__LogSummary *const*, const char *);
SOAP_FMAC3 contest2__LogSummary ** SOAP_FMAC4 soap_in_PointerTocontest2__LogSummary(struct soap*, const char*, contest2__LogSummary **, const char*);

#define soap_write_PointerTocontest2__LogSummary(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__LogSummary(soap, data), 0) || C1::soap_put_PointerTocontest2__LogSummary(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__LogSummary(struct soap*, contest2__LogSummary *const*, const char*, const char*);

#define soap_read_PointerTocontest2__LogSummary(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__LogSummary(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__LogSummary ** SOAP_FMAC4 soap_get_PointerTocontest2__LogSummary(struct soap*, contest2__LogSummary **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__RigFrequency
#define SOAP_TYPE_C1_PointerTocontest2__RigFrequency (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__RigFrequency(struct soap*, contest2__RigFrequency *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__RigFrequency(struct soap*, const char *, int, contest2__RigFrequency *const*, const char *);
SOAP_FMAC3 contest2__RigFrequency ** SOAP_FMAC4 soap_in_PointerTocontest2__RigFrequency(struct soap*, const char*, contest2__RigFrequency **, const char*);

#define soap_write_PointerTocontest2__RigFrequency(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__RigFrequency(soap, data), 0) || C1::soap_put_PointerTocontest2__RigFrequency(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__RigFrequency(struct soap*, contest2__RigFrequency *const*, const char*, const char*);

#define soap_read_PointerTocontest2__RigFrequency(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__RigFrequency(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__RigFrequency ** SOAP_FMAC4 soap_get_PointerTocontest2__RigFrequency(struct soap*, contest2__RigFrequency **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__ArrayOfQsoIdVersion
#define SOAP_TYPE_C1_PointerTocontest2__ArrayOfQsoIdVersion (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__ArrayOfQsoIdVersion(struct soap*, contest2__ArrayOfQsoIdVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__ArrayOfQsoIdVersion(struct soap*, const char *, int, contest2__ArrayOfQsoIdVersion *const*, const char *);
SOAP_FMAC3 contest2__ArrayOfQsoIdVersion ** SOAP_FMAC4 soap_in_PointerTocontest2__ArrayOfQsoIdVersion(struct soap*, const char*, contest2__ArrayOfQsoIdVersion **, const char*);

#define soap_write_PointerTocontest2__ArrayOfQsoIdVersion(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__ArrayOfQsoIdVersion(soap, data), 0) || C1::soap_put_PointerTocontest2__ArrayOfQsoIdVersion(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__ArrayOfQsoIdVersion(struct soap*, contest2__ArrayOfQsoIdVersion *const*, const char*, const char*);

#define soap_read_PointerTocontest2__ArrayOfQsoIdVersion(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__ArrayOfQsoIdVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfQsoIdVersion ** SOAP_FMAC4 soap_get_PointerTocontest2__ArrayOfQsoIdVersion(struct soap*, contest2__ArrayOfQsoIdVersion **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__QsoIdVersion
#define SOAP_TYPE_C1_PointerTocontest2__QsoIdVersion (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__QsoIdVersion(struct soap*, contest2__QsoIdVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__QsoIdVersion(struct soap*, const char *, int, contest2__QsoIdVersion *const*, const char *);
SOAP_FMAC3 contest2__QsoIdVersion ** SOAP_FMAC4 soap_in_PointerTocontest2__QsoIdVersion(struct soap*, const char*, contest2__QsoIdVersion **, const char*);

#define soap_write_PointerTocontest2__QsoIdVersion(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__QsoIdVersion(soap, data), 0) || C1::soap_put_PointerTocontest2__QsoIdVersion(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__QsoIdVersion(struct soap*, contest2__QsoIdVersion *const*, const char*, const char*);

#define soap_read_PointerTocontest2__QsoIdVersion(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__QsoIdVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__QsoIdVersion ** SOAP_FMAC4 soap_get_PointerTocontest2__QsoIdVersion(struct soap*, contest2__QsoIdVersion **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__ArrayOfQso
#define SOAP_TYPE_C1_PointerTocontest2__ArrayOfQso (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__ArrayOfQso(struct soap*, contest2__ArrayOfQso *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__ArrayOfQso(struct soap*, const char *, int, contest2__ArrayOfQso *const*, const char *);
SOAP_FMAC3 contest2__ArrayOfQso ** SOAP_FMAC4 soap_in_PointerTocontest2__ArrayOfQso(struct soap*, const char*, contest2__ArrayOfQso **, const char*);

#define soap_write_PointerTocontest2__ArrayOfQso(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__ArrayOfQso(soap, data), 0) || C1::soap_put_PointerTocontest2__ArrayOfQso(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__ArrayOfQso(struct soap*, contest2__ArrayOfQso *const*, const char*, const char*);

#define soap_read_PointerTocontest2__ArrayOfQso(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__ArrayOfQso(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfQso ** SOAP_FMAC4 soap_get_PointerTocontest2__ArrayOfQso(struct soap*, contest2__ArrayOfQso **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__Qso
#define SOAP_TYPE_C1_PointerTocontest2__Qso (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__Qso(struct soap*, contest2__Qso *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__Qso(struct soap*, const char *, int, contest2__Qso *const*, const char *);
SOAP_FMAC3 contest2__Qso ** SOAP_FMAC4 soap_in_PointerTocontest2__Qso(struct soap*, const char*, contest2__Qso **, const char*);

#define soap_write_PointerTocontest2__Qso(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__Qso(soap, data), 0) || C1::soap_put_PointerTocontest2__Qso(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__Qso(struct soap*, contest2__Qso *const*, const char*, const char*);

#define soap_read_PointerTocontest2__Qso(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__Qso(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__Qso ** SOAP_FMAC4 soap_get_PointerTocontest2__Qso(struct soap*, contest2__Qso **, const char*, const char*);

#ifndef SOAP_TYPE_C1_PointerTocontest2__ArrayOfstring
#define SOAP_TYPE_C1_PointerTocontest2__ArrayOfstring (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTocontest2__ArrayOfstring(struct soap*, contest2__ArrayOfstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTocontest2__ArrayOfstring(struct soap*, const char *, int, contest2__ArrayOfstring *const*, const char *);
SOAP_FMAC3 contest2__ArrayOfstring ** SOAP_FMAC4 soap_in_PointerTocontest2__ArrayOfstring(struct soap*, const char*, contest2__ArrayOfstring **, const char*);

#define soap_write_PointerTocontest2__ArrayOfstring(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_PointerTocontest2__ArrayOfstring(soap, data), 0) || C1::soap_put_PointerTocontest2__ArrayOfstring(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTocontest2__ArrayOfstring(struct soap*, contest2__ArrayOfstring *const*, const char*, const char*);

#define soap_read_PointerTocontest2__ArrayOfstring(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_PointerTocontest2__ArrayOfstring(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 contest2__ArrayOfstring ** SOAP_FMAC4 soap_get_PointerTocontest2__ArrayOfstring(struct soap*, contest2__ArrayOfstring **, const char*, const char*);

#ifndef SOAP_TYPE_C1__QName
#define SOAP_TYPE_C1__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize__QName(soap, data), 0) || C1::soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !C1::soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_C1_string
#define SOAP_TYPE_C1_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (C1::soap_serialize_string(soap, data), 0) || C1::soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !C1::soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__RigFrequency
#define SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__RigFrequency (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, std::vector<contest2__RigFrequency * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, const std::vector<contest2__RigFrequency * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, const char*, int, const std::vector<contest2__RigFrequency * >*, const char*);
SOAP_FMAC3 std::vector<contest2__RigFrequency * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, const char*, std::vector<contest2__RigFrequency * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTocontest2__RigFrequency(soap, n) C1::soap_instantiate_std__vectorTemplateOfPointerTocontest2__RigFrequency(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTocontest2__RigFrequency(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<contest2__RigFrequency * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTocontest2__RigFrequency(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__QsoIdVersion
#define SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__QsoIdVersion (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, std::vector<contest2__QsoIdVersion * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, const std::vector<contest2__QsoIdVersion * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, const char*, int, const std::vector<contest2__QsoIdVersion * >*, const char*);
SOAP_FMAC3 std::vector<contest2__QsoIdVersion * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, const char*, std::vector<contest2__QsoIdVersion * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(soap, n) C1::soap_instantiate_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<contest2__QsoIdVersion * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTocontest2__QsoIdVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__Qso
#define SOAP_TYPE_C1_std__vectorTemplateOfPointerTocontest2__Qso (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, std::vector<contest2__Qso * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, const std::vector<contest2__Qso * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, const char*, int, const std::vector<contest2__Qso * >*, const char*);
SOAP_FMAC3 std::vector<contest2__Qso * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, const char*, std::vector<contest2__Qso * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTocontest2__Qso(soap, n) C1::soap_instantiate_std__vectorTemplateOfPointerTocontest2__Qso(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTocontest2__Qso(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<contest2__Qso * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTocontest2__Qso(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_std__vectorTemplateOfint
#define SOAP_TYPE_C1_std__vectorTemplateOfint (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);

#define soap_new_std__vectorTemplateOfint(soap, n) C1::soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_C1_std__vectorTemplateOfstd__string
#define SOAP_TYPE_C1_std__vectorTemplateOfstd__string (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);

#define soap_new_std__vectorTemplateOfstd__string(soap, n) C1::soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfstd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

} // namespace C1


#endif

/* End of C1H.h */
